Leaderboard System

This project is a distributed leaderboard system designed to manage and display player scores across multiple regions. It uses FastAPI for the backend and Django for the web interface.

Project Structure

Dub/
	connections.py
	db_operations.py
	node.py
Goa/
	connections.py
	db_operations.py
	node.py
Hyd/
	connections.py
	db_operations.py
	Hyderabad_db/
		000003.log
		CURRENT
		LOCK
		LOG
		MANIFEST-000002
	node.py
Pilani/
	__pycache__/
	connections.py
	db_operations.py
	node.py
README

app.py
connections.py
db_ops.py

web/
	dls/
		db.sqlite3
		dls/
			__init__.py
			asgi.py
			...
		leaderboard/
			...
		manage.py

Features

- Distributed Nodes: Each region has its own node to manage local player scores.
- Replication: Data is replicated across nodes to ensure availability and fault tolerance.
- Django Web Interface: A user-friendly web interface to view and manage player scores.
- FastAPI Backend: A robust backend to handle API requests and data synchronization.

Installation


1. Run the Django server:
    cd web/dls
    python manage.py runserver

2. Run the FastAPI master server:
    python app.py

3. Run the FastAPI nodes (example for Hyderabad node):
    cd Hyd
    python node.py --port 8001 --region Hyderabad --master_server_host 127.0.0.1 --master_server_port 8080

Usage

- Access the web interface at 

http://127.0.0.1:8000

 to view and manage player scores.
- Use the FastAPI endpoints to interact with the nodes programmatically.